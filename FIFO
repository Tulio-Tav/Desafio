//Implementação do Método FIFO em Software

#include <stdio.h>
#include <stdlib.h>

struct FIFO {

	int capac;
	float *dados;
	int primeiro;
	int ultimo;
	int nItens; 

};

void criarFIFO( struct FIFO *f, int c ) { 

	f->capac = c;
	f->dados = (float*) malloc (f->capac * sizeof(float));
	f->primeiro = 0;
	f->ultimo = -1;
	f->nItens = 0; 

}

void inserir(struct FIFO *f, int v) {

	if(f->ultimo == f->capac-1)
		f->ultimo = -1;

	f->ultimo++;
	f->dados[f->ultimo] = v; // incrementa ultimo e insere
	f->nItens++; // mais um item inserido

}

int remover( struct FIFO *f ) { // pega o item do comecoo da FIFO

	int temp = f->dados[f->primeiro++]; // pega o valor e incrementa o primeiro

	if(f->primeiro == f->capac)
		f->primeiro = 0;

	f->nItens--;  // um item retirado
	return temp;

}

int estaVazia( struct FIFO *f ) { // retorna verdadeiro se a FIFO esta vazia

	return (f->nItens==0);

}

int estaCheia( struct FIFO *f ) { // retorna verdadeiro se a FIFO esta cheia

	return (f->nItens == f->capac);
}

void mostrarFIFO(struct FIFO *f){

	int cont, i;

	for ( cont=0, i= f->primeiro; cont < f->nItens; cont++){

		printf("%.2f\t",f->dados[i++]);

		if (i == f->capac)
			i=0;

	}
	printf("\n\n");

}

int main () {

	int opcao, capa;
	float valor;
	struct FIFO FilaQualquer;

	// cria a FIFO
	printf("\nCapacidade da FIFO? ");
	scanf("%d",&capa);
	criarFIFO(&FilaQualquer, capa);

	// apresenta menu
	while( 1 ){

		printf("\n1 - Inserir elemento\n2 - Remover elemento\n3 - Mostrar FIFO\n0 - Sair\n\nOpcao? ");
		scanf("%d", &opcao);

		switch(opcao){

			case 0: exit(0);

			case 1: // insere elemento
				if (estaCheia(&FilaQualquer)){

					printf("\nFIFO Cheia!!!\n\n");

				}
				else {

					printf("\nValor do elemento a ser inserido? ");
					scanf("%f", &valor);
					inserir(&FilaQualquer,valor);

				}

				break;

			case 2: // remove elemento
				if (estaVazia(&FilaQualquer)){

					printf("\nFIFO vazia!!!\n\n");

				}
				else {

					valor = remover(&FilaQualquer);
					printf("\n%1f removido com sucesso\n\n", valor) ; 

				}
				break;

				case 3: // mostrar FIFO
					if (estaVazia(&FilaQualquer)){

						printf("\nFIFO vazia!!!\n\n");

					}
					else {

						printf("\nConteudo da FIFO => ");
						mostrarFIFO(&FilaQualquer);

					}
					break;

				default:
					printf("\nOpcao Invalida\n\n");

		}
	}
}
